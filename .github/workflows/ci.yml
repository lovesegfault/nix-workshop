name: ci
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  flake-check:
    runs-on: ${{ matrix.system }}
    strategy:
      matrix:
        system:
          - macos-latest
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: nix-workshop
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: parse
        run: nix-instantiate --json --parse ./**/*.nix
      - name: flake-check
        run: |
          cachix watch-exec nix-workshop -- \
          nix flake check -L
  build-shell:
    runs-on: ${{ matrix.system }}
    strategy:
      matrix:
        system:
          - macos-latest
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: nix-workshop
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: build-shell
        run: |
          SYSTEM="$(nix eval --impure --expr 'builtins.currentSystem')"
          cachix watch-exec nix-workshop -- \
          nix build -L --keep-going \
            .\#devShells."$SYSTEM".default.inputDerivation
  build-packages:
    runs-on: ${{ matrix.system }}
    strategy:
      matrix:
        system:
          - macos-latest
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: nix-workshop
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: build-packages
        run: |
          SYSTEM="$(nix eval --impure --expr 'builtins.currentSystem')"
          cachix watch-exec nix-workshop -- \
          nix build -L --keep-going \
            .\#packages."$SYSTEM".default \
            .\#packages."$SYSTEM".docker-image
  run-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: nix-workshop
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: build-packages
        run: |
          SYSTEM="$(nix eval --impure --expr 'builtins.currentSystem')"
          cachix watch-exec nix-workshop -- \
          nix build -L --keep-going .\#packages."$SYSTEM".docker-image
          docker load -i result | cut -f 2- -d ':' | xargs docker run
  check-all:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - flake-check
      - build-shell
      - build-packages
      - run-docker
    steps:
      - uses: re-actors/alls-green@v1.1.0
        with:
          jobs: ${{ toJSON(needs) }}
